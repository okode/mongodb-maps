buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
    }
}

plugins {
    id 'org.sonarqube' version '1.2'
}

repositories { jcenter() }

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'

dependencyManagement {
    imports { mavenBom 'io.spring.platform:platform-bom:2.0.3.RELEASE' }
}

version = '0.1.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

springBoot {
    executable = true
    excludeDevtools = true
}

jar { archiveName = 'mongodb-maps.jar' }

dependencies {
    compile     'org.springframework.boot:spring-boot-starter-web'
    compile     'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile     'org.springframework.boot:spring-boot-devtools'
    compile     'org.apache.commons:commons-lang3'
    compile     'io.springfox:springfox-swagger2:2.4.0'
    compile     'io.springfox:springfox-swagger-ui:2.4.0'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
    toolVersion = '0.7.6.201602180812'
}

sonarqube {
    properties {
        property 'sonar.projectName',          'mongodb-maps-develop'
        property 'sonar.projectKey',           'com.okode.mongodbmaps'
        property 'sonar.scm.provider',         'git'
        property 'sonar.junit.reportsPath',    'build/test-results'
        property 'sonar.java.coveragePlugin',  'jacoco'
        property 'sonar.jacoco.reportPath',    'build/jacoco/test.exec'
        property 'sonar.host.url',             "$System.env.SONAR_HOST_URL"
        property 'sonar.login',                "$System.env.SONAR_LOGIN"
        property 'sonar.password',             "$System.env.SONAR_PASSWORD"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
